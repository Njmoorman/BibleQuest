name: iOS Build & Deploy (Bible Quest for Kids)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: 8.0.301
  APP_IDENTIFIER: app.biblequest
  APP_DISPLAY_VERSION: 1.1.0

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show repo tree
        run: |
          echo "🔍 Repo tree (3 levels):"
          find . -maxdepth 3 -print

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Node.js for web assets
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install MAUI workloads
        run: dotnet workload install maui-ios --skip-manifest-update

      - name: Configure NuGet sources
        run: |
          if ! dotnet nuget list source | grep -q "https://api.nuget.org/v3/index.json"; then
            dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget-org
          else
            echo "✅ nuget.org feed already present"
          fi
          dotnet nuget list source

      - name: Restore NuGet packages
        run: dotnet restore BibleQuestForKids/BibleQuestForKids.csproj --no-cache --disable-parallel --verbosity detailed

      - name: Verify restore assets
        run: |
          if [ ! -f BibleQuestForKids/obj/project.assets.json ]; then
            echo "❌ Restore did not generate project.assets.json"
            exit 1
          fi
          echo "✅ Found project.assets.json"

      - name: Build bundled web assets
        working-directory: BibleQuestForKids/wwwroot
        run: |
          npm ci
          npm run build
        env:
          CI: true

      - name: Strip development web assets
        run: |
          rm -rf BibleQuestForKids/wwwroot/node_modules BibleQuestForKids/wwwroot/src
          rm -f BibleQuestForKids/wwwroot/package*.json

      - name: Guard dist assets exist
        run: |
          DIST="BibleQuestForKids/wwwroot/dist"
          if [ ! -s "$DIST/index.html" ]; then
            echo "dist/index.html missing. Run npm build before publishing." >&2
            exit 1
          fi
          echo "✅ Found dist/index.html"
          head -n 10 "$DIST/index.html"

      - name: Resolve build number
        id: resolve-build
        run: |
          BUILD_NUMBER=$(date +%s)
          echo "APP_BUILD_NUMBER=$BUILD_NUMBER" | tee -a "$GITHUB_ENV"

      - name: Install signing assets
        env:
          APPLE_CERTIFICATE_P12_BASE64: ${{ secrets.APPLE_CERTIFICATE_P12_BASE64 }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE_BASE64 }}
        run: |
          set -euo pipefail
          KEYCHAIN="signing.keychain-db"
          security create-keychain -p "" "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          echo "$APPLE_CERTIFICATE_P12_BASE64" | base64 --decode > signing.p12
          security import signing.p12 -k "$KEYCHAIN" -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          PROFILE_DIR="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILE_DIR"
          PROFILE_PATH="$PROFILE_DIR/${APP_IDENTIFIER}.mobileprovision"
          echo "$APPLE_PROVISIONING_PROFILE_BASE64" | base64 --decode > "$PROFILE_PATH"
          CODESIGN_IDENTITY=$(security find-identity -v -p codesigning "$KEYCHAIN" | head -1 | awk '{print $2}')
          echo "CODESIGN_KEY=$CODESIGN_IDENTITY" >> "$GITHUB_ENV"
          echo "CODESIGN_PROVISION=$PROFILE_PATH" >> "$GITHUB_ENV"

      - name: Publish .NET MAUI iOS app
        run: >-
          dotnet publish BibleQuestForKids/BibleQuestForKids.csproj
          -c Release
          -f net8.0-ios
          -p:RuntimeIdentifier=ios-arm64
          -p:BuildIpa=true
          -p:ApplicationId=${{ env.APP_IDENTIFIER }}
          -p:CFBundleIdentifier=${{ env.APP_IDENTIFIER }}
          -p:ApplicationDisplayVersion=${{ env.APP_DISPLAY_VERSION }}
          -p:ApplicationVersion=${{ env.APP_BUILD_NUMBER }}
          -p:CodesignKey=${{ env.CODESIGN_KEY }}
          -p:CodesignProvision=${{ env.CODESIGN_PROVISION }}
          -p:CodesignTeamId=${{ secrets.TEAM_ID }}
          --verbosity detailed

      - name: Verify IPA contains dist assets
        run: |
          IPA_PATH=$(find BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish -name '*.ipa' | head -1)
          unzip -q "$IPA_PATH" -d tmp
          APP_DIR=$(ls tmp/Payload)
          if [ ! -f "tmp/Payload/$APP_DIR/wwwroot/dist/index.html" ]; then
            echo "IPA missing dist/index.html" >&2
            exit 1
          fi
          echo "✅ IPA contains dist/index.html"

      - name: Upload IPA to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish/*.ipa
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
          bundle-id: ${{ env.APP_IDENTIFIER }}

      - name: Archive IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: BibleQuestForKids-ipa
          path: BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish/*.ipa