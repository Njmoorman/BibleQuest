<Project Sdk="Microsoft.NET.Sdk">

  <!-- Import the Razor SDK so Blazor static web assets are bundled for all targets. -->
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk.Razor" />

  <PropertyGroup>
    <TargetFrameworks>net8.0-ios;net8.0-android</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <RootNamespace>BibleQuestForKids</RootNamespace>
    <UseMaui>true</UseMaui>
    <SingleProject>true</SingleProject>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <SupportedOSPlatformVersion>13.0</SupportedOSPlatformVersion>
    <SupportedOrientations>Portrait Landscape</SupportedOrientations>
    <EnableDefaultStaticWebAssets>true</EnableDefaultStaticWebAssets>
  </PropertyGroup>

  <!-- Keep platform identifiers explicit so Codemagic signing always matches. -->
  <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-ios'">
    <CFBundleIdentifier>app.biblequest</CFBundleIdentifier>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-android'">
    <ApplicationId>app.biblequest</ApplicationId>
  </PropertyGroup>

  <!-- Ship the prebuilt Vite bundle (dist/) alongside the handcrafted host page. -->
  <ItemGroup>
    <!-- Package dist/ instead of raw wwwroot so the IPA stays lean. -->
    <MauiAsset Include="wwwroot/dist/**"
               LogicalName="wwwroot/%(RecursiveDir)%(Filename)%(Extension)" />

    <!-- Keep the MAUI host page at the root so BlazorWebView can bootstrap React. -->
    <MauiAsset Include="wwwroot/index.html"
               LogicalName="wwwroot/index.html" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0-android'">
    <!-- Generates adaptive/mipmap icons for Android only. iOS ships the curated asset catalog instead. -->
    <MauiIcon Include="Resources\AppIcon\appicon.svg"
              ForegroundFile="Resources\AppIcon\appiconfg.svg"
              Color="#1B365D" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0-ios'">
    <IosAppIconBase64 Include="Platforms\iOS\Assets.xcassets\AppIcon.appiconset\*.base64" />
  </ItemGroup>

  <Target Name="MaterializeIosAppIcons"
          BeforeTargets="PrepareForBuild"
          Condition="'$(TargetFramework)' == 'net8.0-ios'">
    <!-- Use the shared Python helper to keep icons in source control as text. -->
    <Message Text="Materializing iOS AppIcon PNGs from base64 sources." Importance="high" />
    <Exec Command="python3 &quot;$(MSBuildProjectDirectory)/Platforms/iOS/Assets.xcassets/AppIcon.appiconset/materialize_icons.py&quot;" />
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.Maui.Controls" Version="8.0.*" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="8.0.*" />
  </ItemGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk.Razor" />

</Project>