# ==========================================================
# Bible Quest iOS Build — Codemagic Workflow
#
# Default mode ships to TestFlight. When you're ready for the
# App Store, flip the two flags under `publishing.app_store_connect`:
#   submit_to_testflight: false
#   submit_to_app_store: true
# ==========================================================

workflows:
  bible-quest-ios:
    name: Bible Quest for Kids – iOS Build (.NET MAUI, Static WebView)
    max_build_duration: 60
    environment:
      xcode: latest
      cocoapods: default
      node: 18.16.0
      groups:
        - appstore_credentials
      vars:
        DOTNET_ROOT: /Users/builder/.dotnet
        DOTNET_CLI_HOME: /Users/builder/.dotnet
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
        DOTNET_CLI_TELEMETRY_OPTOUT: "1"
        APP_IDENTIFIER: app.biblequest
        APP_DISPLAY_VERSION: 1.1.0
        TEAM_ID: 2989BXM365
        AUTO_CLEAR_TESTFLIGHT_REVIEW: "true"
    integrations:
      app_store_connect: CODE MAGIC API - Distribution (Admin)
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: main
          include: true

    scripts:
      - name: Compute build number (epoch)
        script: |
          set -euo pipefail
          EPOCH_BUILD_NUMBER="$(date +%s)"
          echo "APP_BUILD_NUMBER=$EPOCH_BUILD_NUMBER" >> "$CM_ENV"
          echo "Using APP_BUILD_NUMBER=$EPOCH_BUILD_NUMBER"

      - name: Install .NET SDK locally
        script: |
          set -euo pipefail
          DOTNET_VERSION="8.0.301"
          mkdir -p "$DOTNET_ROOT"
          curl -sSL https://dot.net/v1/dotnet-install.sh -o /tmp/dotnet-install.sh
          chmod +x /tmp/dotnet-install.sh
          /tmp/dotnet-install.sh --version "$DOTNET_VERSION" --install-dir "$DOTNET_ROOT"
          export PATH="$DOTNET_ROOT:$PATH"
          dotnet --info

      - name: Install MAUI workloads
        script: |
          set -euo pipefail
          export PATH="$DOTNET_ROOT:$PATH"
          mkdir -p "$HOME/.dotnet/temp"
          dotnet workload install maui-ios --skip-manifest-update --temp-dir "$HOME/.dotnet/temp"
          dotnet workload restore BibleQuestForKids/BibleQuestForKids.csproj

      - name: Restore NuGet packages
        script: |
          set -euo pipefail
          export PATH="$DOTNET_ROOT:$PATH"
          dotnet restore BibleQuestForKids/BibleQuestForKids.csproj

      - name: Validate iOS icon catalog
        script: |
          set -euo pipefail
          ICONSET="BibleQuestForKids/Platforms/iOS/Assets.xcassets/AppIcon.appiconset"
          python3 "$ICONSET/materialize_icons.py"
          python3 "$ICONSET/validate_icons.py"

      - name: Build bundled web assets (npm)
        script: |
          set -euo pipefail
          cd BibleQuestForKids/wwwroot
          npm ci
          npm run build
          cd ../..

          DIST="BibleQuestForKids/wwwroot/dist"
          if [ ! -s "$DIST/index.html" ]; then
            echo "ERROR: dist/index.html not found"
            exit 1
          fi
          echo "✅ Built dist/ with index.html"
          head -n 10 "$DIST/index.html"

      - name: Guard: dist/ exists and is valid
        script: |
          set -euo pipefail
          DIST="BibleQuestForKids/wwwroot/dist"
          test -s "$DIST/index.html" || { echo "ERROR: dist/index.html missing"; exit 1; }

          SIZE=$(stat -f%z "$DIST/index.html" 2>/dev/null || stat -c%s "$DIST/index.html")
          HASH=$(shasum -a 256 "$DIST/index.html" | awk '{print $1}')
          echo "✅ index.html — $SIZE bytes — SHA256: $HASH"

      - name: Configure Apple signing assets
        script: |
          set -euo pipefail
          CERTIFICATE_PATH="$HOME/codemagic-cert.p12"
          PROFILE_PATH="$HOME/codemagic-profile.mobileprovision"
          echo "$IOS_CERTIFICATE_P12" | base64 --decode > "$CERTIFICATE_PATH"
          echo "$IOS_PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_PATH"
          security create-keychain -p "" build.keychain
          security import "$CERTIFICATE_PATH" -k ~/Library/Keychains/build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$PROFILE_PATH" ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Align Info.plist bundle ID
        script: |
          INFO_PLIST="BibleQuestForKids/Platforms/iOS/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $APP_IDENTIFIER" "$INFO_PLIST"

      - name: Stamp Info.plist versions
        script: |
          INFO_PLIST="BibleQuestForKids/Platforms/iOS/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $APP_DISPLAY_VERSION" "$INFO_PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $APP_BUILD_NUMBER" "$INFO_PLIST"

      - name: Publish .NET MAUI iOS app
        script: |
          set -euo pipefail
          export PATH="$DOTNET_ROOT:$PATH"
          dotnet publish BibleQuestForKids/BibleQuestForKids.csproj \
            -c Release -f net8.0-ios \
            -p:RuntimeIdentifier=ios-arm64 \
            -p:BuildIpa=true \
            -p:ApplicationId="$APP_IDENTIFIER" \
            -p:CFBundleIdentifier="$APP_IDENTIFIER" \
            -p:ApplicationDisplayVersion="$APP_DISPLAY_VERSION" \
            -p:ApplicationVersion="$APP_BUILD_NUMBER"

      - name: Verify IPA contains dist/index.html
        script: |
          IPA_PATH=$(find BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish -name '*.ipa' | head -1)
          [ -n "$IPA_PATH" ] || { echo "ERROR: No IPA found"; exit 1; }
          TMP_DIR=$(mktemp -d)
          unzip -q "$IPA_PATH" -d "$TMP_DIR"
          APP_DIR=$(cd "$TMP_DIR/Payload" && ls -d *.app | head -1)
          INDEX_HTML="$TMP_DIR/Payload/$APP_DIR/wwwroot/dist/index.html"
          [ -s "$INDEX_HTML" ] || { echo "ERROR: index.html missing in IPA"; exit 1; }
          echo "✅ IPA contains dist/index.html"
          head -n 10 "$INDEX_HTML"

      - name: Collect IPA
        script: |
          mkdir -p output
          cp BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish/*.ipa output/

      - name: Clear in-flight TestFlight beta review
        script: |
          if [ "${AUTO_CLEAR_TESTFLIGHT_REVIEW:-true}" = "true" ]; then
            ruby ci/scripts/clear_testflight_beta_review.rb || echo "⚠️ Could not auto-clear TestFlight review"
          fi

    artifacts:
      - output/*.ipa
      - output/ipa-wwwroot.zip

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false