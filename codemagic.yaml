# ==========================================================
# Bible Quest iOS Build â€” Codemagic Workflow
#
# CURRENT MODE: TestFlight Deployment (internal/external testers)
# TO DEPLOY TO APP STORE:
#    1. Set `submit_to_testflight: false`
#    2. Set `submit_to_app_store: true`
#    3. Confirm app metadata and screenshots in App Store Connect
# ==========================================================


# Bible Quest iOS App â€“ Codemagic YAML for .NET MAUI
# To deploy to App Store later, change `submit_to_testflight` to `submit_to_app_store: true`

workflows:
  bible-quest-ios:
    name: Bible Quest for Kids â€“ iOS Build (.NET MAUI)
    max_build_duration: 60
    environment:
      xcode: latest
      cocoapods: default
      vars:
        DOTNET_ROOT: /usr/local/share/dotnet
        APP_STORE_CONNECT_ISSUER_ID: <your-issuer-id> # ðŸ‘ˆ Already handled in secrets
        APP_STORE_CONNECT_KEY_IDENTIFIER: 3J6J67QJ9K
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted private key in env
        CERTIFICATE_PRIVATE_KEY: Encrypted .p12 in env
        PROVISIONING_PROFILE: Encrypted .mobileprovision in env
        APP_IDENTIFIER: com.base44.biblequest
        TEAM_ID: 2989BXM365
      groups:
        - app_store_credentials
        - signing_credentials
      node: 18.16.0
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - name: Install .NET SDK
        script: |
          brew install --cask dotnet-sdk
          export PATH="/usr/local/share/dotnet:$PATH"
          dotnet --version
      - name: Build bundled web assets (npm)
        script: |
          cd BibleQuestForKids/wwwroot
          npm ci
          npm run build
      - name: Configure iOS code signing keychain
        script: |
          # Prepare a temporary keychain and install signing assets provided via Codemagic env vars.
          # Works for both TestFlight and full App Store submissions when toggled above.
          set -euo pipefail

          KEYCHAIN_NAME=codemagic-temporary.keychain-db
          KEYCHAIN_PATH="$HOME/Library/Keychains/$KEYCHAIN_NAME"
          KEYCHAIN_PASSWORD="$(uuidgen)"

          CERTIFICATE_PATH="$CM_BUILD_DIR/codemagic_cert.p12"
          PROFILE_PATH="$CM_BUILD_DIR/codemagic_profile.mobileprovision"
          PROFILE_DIR="$HOME/Library/MobileDevice/Provisioning Profiles"

          CERT_PASSWORD="${CERTIFICATE_PRIVATE_KEY_PASSWORD:-}"

          cleanup() {
            rm -f "$CERTIFICATE_PATH" "$PROFILE_PATH"
          }
          trap cleanup EXIT

          echo "$CERTIFICATE_PRIVATE_KEY" | base64 --decode > "$CERTIFICATE_PATH"
          echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_PATH"

          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

          EXISTING_KEYCHAINS=$(security list-keychains -d user | sed 's/[" ]//g')
          security list-keychains -d user -s "$KEYCHAIN_PATH" $EXISTING_KEYCHAINS

          security import "$CERTIFICATE_PATH" -k "$KEYCHAIN_PATH" -P "$CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

          mkdir -p "$PROFILE_DIR"
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print UUID' /dev/stdin <<< "$(security cms -D -i "$PROFILE_PATH")")
          cp "$PROFILE_PATH" "$PROFILE_DIR/$PROFILE_UUID.mobileprovision"

          CODESIGN_IDENTITY=$(security find-identity -v -p codesigning "$KEYCHAIN_PATH" | head -n 1 | awk '{print $2}')

          {
            echo "CODESIGN_KEY=$CODESIGN_IDENTITY"
            echo "PROVISIONING_PROFILE_UUID=$PROFILE_UUID"
            echo "KEYCHAIN_PATH=$KEYCHAIN_PATH"
            echo "KEYCHAIN_PASSWORD=$KEYCHAIN_PASSWORD"
          } >> "$CM_ENV"
      - name: Restore & build MAUI app
        script: |
          dotnet workload install maui
          dotnet restore BibleQuestForKids/BibleQuestForKids.csproj
          dotnet build BibleQuestForKids/BibleQuestForKids.csproj -c Release -f net8.0-ios -p:RuntimeIdentifier=ios-arm64 -p:BuildIpa=true
      - name: Package IPA
        script: |
          mkdir -p output
          cp -r **/bin/Release/net8.0-ios/ios-arm64/*.ipa output/
    artifacts:
      - output/*.ipa
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
