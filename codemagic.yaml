# ==========================================================
# Bible Quest iOS Build â€” Codemagic Workflow
#
# Default mode ships to TestFlight. When you're ready for the
# App Store, flip the two flags under `publishing.app_store_connect`:
#   submit_to_testflight: false
#   submit_to_app_store: true
# ==========================================================

workflows:
  bible-quest-ios:
    name: Bible Quest for Kids â€“ iOS Build (.NET MAUI)
    max_build_duration: 60
    environment:
      xcode: latest
      cocoapods: default
      node: 18.16.0
      vars:
        DOTNET_ROOT: /Users/builder/.dotnet
        DOTNET_CLI_HOME: /Users/builder/.dotnet
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"
        DOTNET_CLI_TELEMETRY_OPTOUT: "1"
        APP_IDENTIFIER: app.biblequest
        TEAM_ID: 2989BXM365
    integrations:
      app_store_connect: CODE MAGIC API - Distribution (Admin)   # ðŸ‘ˆ must match your integration name exactly in Codemagic
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - name: Install .NET SDK locally (no sudo required)
        script: |
          set -euo pipefail
          DOTNET_VERSION="8.0.301"
          mkdir -p "$DOTNET_ROOT"
          curl -sSL https://dot.net/v1/dotnet-install.sh -o /tmp/dotnet-install.sh
          chmod +x /tmp/dotnet-install.sh
          /tmp/dotnet-install.sh --version "$DOTNET_VERSION" --install-dir "$DOTNET_ROOT"
          export PATH="$DOTNET_ROOT:$PATH"
          dotnet --info

      - name: Install MAUI workload
        script: |
          set -euo pipefail
          export PATH="$DOTNET_ROOT:$PATH"
          mkdir -p "$HOME/.dotnet/temp"
          dotnet workload install maui-ios --skip-manifest-update --temp-dir "$HOME/.dotnet/temp"
          dotnet workload restore BibleQuestForKids/BibleQuestForKids.csproj   # explicitly target the MAUI project so Codemagic sees it

      - name: Build bundled web assets (npm)
        script: |
          set -euo pipefail
          cd BibleQuestForKids/wwwroot
          npm ci
          npm run build

      - name: Restore NuGet packages
        script: |
          set -euo pipefail
          export PATH="$DOTNET_ROOT:$PATH"
          dotnet restore BibleQuestForKids/BibleQuestForKids.csproj

      - name: Publish .NET MAUI iOS app
        script: |
          set -euo pipefail
          export PATH="$DOTNET_ROOT:$PATH"
          dotnet publish BibleQuestForKids/BibleQuestForKids.csproj \
            -c Release \
            -f net8.0-ios \
            -p:RuntimeIdentifier=ios-arm64 \
            -p:ArchiveOnBuild=true \
            -p:CreatePackage=true

      - name: Collect IPA
        script: |
          set -euo pipefail
          mkdir -p output
          find BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish -maxdepth 1 -name '*.ipa' \
            -print -exec cp {} output/ \;

    artifacts:
      - output/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
