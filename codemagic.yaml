workflows:
  ios-maui:
    name: "iOS Build & Deploy (Bible Quest for Kids)"
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      xcode: 16.2
      node: 18
      vars:
        DOTNET_VERSION: 8.0.300
        APP_IDENTIFIER: app.biblequest
        APP_DISPLAY_VERSION: 1.1.0
      groups:
        - app_store_connect
        - ios_signing
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    cache:
      cache_paths:
        - ~/.nuget/packages
        - BibleQuestForKids/wwwroot/node_modules
    scripts:
      - name: Install .NET SDK
        script: |
          set -euo pipefail
          export DOTNET_ROOT="$HOME/.dotnet"
          mkdir -p "$DOTNET_ROOT"
          curl -fsSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --version "$DOTNET_VERSION" --install-dir "$DOTNET_ROOT"
          export PATH="$DOTNET_ROOT:$DOTNET_ROOT/tools:$PATH"
          dotnet --info
      - name: Install MAUI workloads
        script: |
          set -euo pipefail
          dotnet workload install maui-ios \
            --source https://aka.ms/dotnet8/nuget/index.json \
            --skip-sign-check
      - name: Restore NuGet packages
        script: |
          set -euo pipefail
          dotnet restore BibleQuestForKids/BibleQuestForKids.csproj \
            --no-cache \
            --disable-parallel \
            --verbosity minimal
      - name: Build bundled web assets
        script: |
          set -euo pipefail
          pushd BibleQuestForKids/wwwroot
          npm ci
          npm run build
          popd
      - name: Strip dev-only node assets
        script: |
          set -euo pipefail
          rm -rf BibleQuestForKids/wwwroot/node_modules BibleQuestForKids/wwwroot/src
          rm -f BibleQuestForKids/wwwroot/package*.json BibleQuestForKids/wwwroot/vite.config.js BibleQuestForKids/wwwroot/tsconfig*.json
          rm -f BibleQuestForKids/wwwroot/postcss.config.js BibleQuestForKids/wwwroot/tailwind.config.js BibleQuestForKids/wwwroot/eslint.config.js BibleQuestForKids/wwwroot/jsconfig.json BibleQuestForKids/wwwroot/components.json
      - name: Guard dist assets exist
        script: |
          set -euo pipefail
          DIST="BibleQuestForKids/wwwroot/dist"
          test -s "$DIST/index.html"
          test -s "$DIST/manifest.json"
          if ! ls "$DIST"/*.js >/dev/null 2>&1; then
            echo "❌ No JavaScript bundles produced" >&2
            exit 1
          fi
          if ! ls "$DIST"/*.css >/dev/null 2>&1; then
            echo "❌ No CSS bundles produced" >&2
            exit 1
          fi
      - name: Resolve build number
        script: |
          set -euo pipefail
          echo "APP_BUILD_NUMBER=$(date +%s)" >> "$CM_ENV"
      - name: Install signing assets
        script: |
          set -euo pipefail
          KEYCHAIN="signing.keychain-db"
          security create-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings -lut 21600 "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security list-keychain -d user -s "$KEYCHAIN" $(security list-keychain -d user | tr -d '"')

          echo "$APPLE_CERTIFICATE_P12_BASE64" | base64 --decode > signing.p12
          security import signing.p12 -k "$KEYCHAIN" -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security
          security set-key-partition-list -S apple-tool:,apple: -k "" "$KEYCHAIN"

          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          PROFILE_PATH="$HOME/Library/MobileDevice/Provisioning Profiles/${APP_IDENTIFIER}.mobileprovision"
          echo "$APPLE_PROVISIONING_PROFILE_BASE64" | base64 --decode > "$PROFILE_PATH"

          CODESIGN_IDENTITY=$(security find-identity -v -p codesigning "$KEYCHAIN" | head -n 1 | awk '{print $2}')
          if [ -z "$CODESIGN_IDENTITY" ]; then
            echo "❌ Unable to locate codesign identity" >&2
            exit 1
          fi
          echo "CODESIGN_KEY=$CODESIGN_IDENTITY" >> "$CM_ENV"
          echo "CODESIGN_PROVISION=$PROFILE_PATH" >> "$CM_ENV"
      - name: Publish .NET MAUI iOS app
        script: |
          set -euo pipefail
          export PATH="$HOME/.dotnet:$HOME/.dotnet/tools:$PATH"
          dotnet publish BibleQuestForKids/BibleQuestForKids.csproj \
            -c Release \
            -f net8.0-ios \
            -p:RuntimeIdentifier=ios-arm64 \
            -p:BuildIpa=true \
            -p:ApplicationId=$APP_IDENTIFIER \
            -p:CFBundleIdentifier=$APP_IDENTIFIER \
            -p:ApplicationDisplayVersion=$APP_DISPLAY_VERSION \
            -p:ApplicationVersion=$APP_BUILD_NUMBER \
            -p:CodesignKey=$CODESIGN_KEY \
            -p:CodesignProvision=$CODESIGN_PROVISION \
            -p:CodesignTeamId=$TEAM_ID \
            --no-restore
      - name: Verify IPA contains dist assets
        script: |
          set -euo pipefail
          IPA_PATH=$(find BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish -name '*.ipa' | head -n 1)
          if [ -z "$IPA_PATH" ]; then
            echo "❌ IPA not found" >&2
            exit 1
          fi
          unzip -q "$IPA_PATH" -d tmp-ipa
          APP_DIR=$(ls tmp-ipa/Payload)
          test -s "tmp-ipa/Payload/$APP_DIR/wwwroot/dist/index.html"
          test -s "tmp-ipa/Payload/$APP_DIR/wwwroot/dist/manifest.json"
    artifacts:
      - BibleQuestForKids/bin/Release/net8.0-ios/ios-arm64/publish/*.ipa
    publishing:
      app_store_connect:
        auth: api_key
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        private_key: $APP_STORE_CONNECT_PRIVATE_KEY
        submit_to_testflight: true
